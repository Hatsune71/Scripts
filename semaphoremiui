#!bin/bash
IMAGE=$(pwd)/out/arch/arm64/boot/Image.gz-dtb
echo "Clone Toolchains"
git clone -j32 https://github.com/najahiiii/aarch64-linux-gnu.git -b 4.9-mirror gcc
git clone -j32 https://github.com/Kry9toN/ak2-KryPtoN -b miui AnyKernel
echo "Done"
token="715801700:AAEnlXgl0p8V5f8xHefHC2SLq8kio6VcS-c"
chat_id="-1001348632957"
GCC="$(pwd)/gcc/bin/aarch64-linux-android-"
tanggal=$(TZ=Asia/Jakarta date "+%Y%m%d-%H%M")
START=$(date +"%s")

# Modules environtment
OUTDIR="$PWD/out/"
SRCDIR="$PWD/"
MODULEDIR="$PWD/AnyKernel/modules/system/lib/modules/"
PRONTO=${MODULEDIR}pronto/pronto_wlan.ko
STRIP="$PWD/gcc/bin/$(echo "$(find "$PWD/gcc/bin" -type f -name "aarch64-*-gcc")" | awk -F '/' '{print $NF}' |\
			sed -e 's/gcc/strip/')"

export ARCH=arm64
export KBUILD_BUILD_USER=root
export KBUILD_BUILD_HOST=KryPtoNProject
# sticker plox
function sticker() {
        curl -s -X POST "https://api.telegram.org/bot$token/sendSticker" \
                        -d sticker="CAADBQADBgADZMYlHVmIXcRlbUt_Ag" \
                        -d chat_id=$chat_id
}
# Stiker Error
function stikerr() {
	curl -s -F chat_id=$chat_id -F sticker="CAADBQADzwIAAnBaORAiq8ke6PAt0wI" https://api.telegram.org/bot$token/sendSticker
	}
# Send info plox channel
function sendinfo() {
        curl -s -X POST "https://api.telegram.org/bot$token/sendMessage" \
                        -d chat_id=$chat_id \
                        -d "disable_web_page_preview=true" \
                        -d "parse_mode=html" \
                        -d text="<b>KryPtoN Kernel MIUI</b> new build is up%0AStarted on <code>SemaphoreCI</code>%0AFor device <b>Vince</b> (Redmi 5 Plus)%0Abranch <code>$(git rev-parse --abbrev-ref HEAD)</code> (Android 9.0/Pie)%0AUnder commit <code>$(git log --pretty=format:'"%h : %s"' -1)</code>%0AUsing compiler: <code>$(${GCC}gcc --version | head -n 1)</code>%0AStarted on <code>$(TZ=Asia/Jakarta date)</code>%0A<b>SemaphoreCI Status</b> <a href='https://android_kernel_xiaomi_msm8953-4.9.semaphoreci.com/workflows/${SEMAPHORE_WORKFLOW_ID}'>here</a>"
}
# Push kernel to channel
function push() {
        cd AnyKernel
	ZIP=$(echo KryPtoN*.zip)
	curl -F document=@$ZIP "https://api.telegram.org/bot$token/sendDocument" \
			-F chat_id="$chat_id" \
			-F "disable_web_page_preview=true" \
			-F "parse_mode=html" \
			-F caption="Build took $(($DIFF / 60)) minute(s) and $(($DIFF % 60)) second(s)."
}
# Function upload logs to my own TELEGRAM paste
function paste() {
        cat build.log | curl -F document=build.log "https://api.telegram.org/bot$token/sendDocument" \
			-F chat_id="@Kry9toN" \
			-F "disable_web_page_preview=true" \
			-F "parse_mode=html" 
}
# Fin Error
function finerr() {
        paste
        curl -s -X POST "https://api.telegram.org/bot$token/sendMessage" \
			-d chat_id="$chat_id" \
			-d "disable_web_page_preview=true" \
			-d "parse_mode=markdown" \
			-d text="Job ${SEMAPHORE_JOB_NAME} throw an error(s)"
}
# Compile plox
function compile() {
        make -s -C $(pwd) O=out vince-krypton_defconfig
        make -s -C $(pwd) CROSS_COMPILE=${GCC} O=out -j32 -l32 2>&1| tee build.log
            if ! [ -a $IMAGE ]; then
                finerr
		stikerr
                exit 1
            fi
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel/zImage
        paste
}
# Zipping
function zipping() {
        cd AnyKernel
        zip -r9 KryPtoN-Kernel-${tanggal}.zip *
        cd ..
}
# Module
function module() {
		cd AnyKernel
		make clean &>/dev/null
		cd ..
	
		for MOD in $(find "${OUTDIR}" -name '*.ko') ; do
			"${STRIP}" --strip-unneeded --strip-debug "${MOD}" &> /dev/null
			"${SRCDIR}"/scripts/sign-file sha512 \
					"${OUTDIR}/signing_key.priv" \
					"${OUTDIR}/signing_key.x509" \
					"${MOD}"
			find "${OUTDIR}" -name '*.ko' -exec cp {} "${MODULEDIR}" \;
			case ${MOD} in
				*/wlan.ko)
					cp -ar "${MOD}" "${PRONTO}"
			esac
		done
}
sendinfo
compile
module
zipping
END=$(date +"%s")
DIFF=$(($END - $START))
push
sticker
